[
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2019-11-04T19:03:15.059Z",
        "line": 3,
        "name": "Read date from Sony RAW file",
        "description": "",
        "id": "unittest-createdate;read-date-from-sony-raw-file",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2501263200,
              "status": "passed"
            },
            "line": 4,
            "name": "File \"SonyA77.ARW\"",
            "match": {
              "arguments": [
                {
                  "val": "\"SonyA77.ARW\"",
                  "offset": 5
                }
              ],
              "location": "stepDefinitions.file(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 739592100,
              "status": "passed"
            },
            "line": 5,
            "name": "the creationdate is \"2019-03-16 18:09:06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"2019-03-16 18:09:06\"",
                  "offset": 20
                }
              ],
              "location": "stepDefinitions.theCreationdateIs(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2019-11-04T19:03:18.417Z",
        "line": 7,
        "name": "Read date from JPEG file",
        "description": "",
        "id": "unittest-createdate;read-date-from-jpeg-file",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 762596900,
              "status": "passed"
            },
            "line": 8,
            "name": "File \"SonyA6300.JPG\"",
            "match": {
              "arguments": [
                {
                  "val": "\"SonyA6300.JPG\"",
                  "offset": 5
                }
              ],
              "location": "stepDefinitions.file(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 632678800,
              "status": "passed"
            },
            "line": 9,
            "name": "the creationdate is \"2019-08-30 22:47:31\"",
            "match": {
              "arguments": [
                {
                  "val": "\"2019-08-30 22:47:31\"",
                  "offset": 20
                }
              ],
              "location": "stepDefinitions.theCreationdateIs(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2019-11-04T19:03:19.844Z",
        "line": 11,
        "name": "Read date from DNG file",
        "description": "",
        "id": "unittest-createdate;read-date-from-dng-file",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 665677800,
              "status": "passed"
            },
            "line": 12,
            "name": "File \"DJIOsmoPlus.DNG\"",
            "match": {
              "arguments": [
                {
                  "val": "\"DJIOsmoPlus.DNG\"",
                  "offset": 5
                }
              ],
              "location": "stepDefinitions.file(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 553397200,
              "status": "passed"
            },
            "line": 13,
            "name": "the creationdate is \"2019-08-11 18:36:31\"",
            "match": {
              "arguments": [
                {
                  "val": "\"2019-08-11 18:36:31\"",
                  "offset": 20
                }
              ],
              "location": "stepDefinitions.theCreationdateIs(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2019-11-04T19:03:21.099Z",
        "line": 15,
        "name": "Read date from MP4 file",
        "description": "",
        "id": "unittest-createdate;read-date-from-mp4-file",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 637916200,
              "status": "passed"
            },
            "line": 16,
            "name": "File \"OnePlus2.mp4\"",
            "match": {
              "arguments": [
                {
                  "val": "\"OnePlus2.mp4\"",
                  "offset": 5
                }
              ],
              "location": "stepDefinitions.file(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1091702900,
              "status": "passed"
            },
            "line": 17,
            "name": "the creationdate is \"2016-03-27 13:18:50\"",
            "match": {
              "arguments": [
                {
                  "val": "\"2016-03-27 13:18:50\"",
                  "offset": 20
                }
              ],
              "location": "stepDefinitions.theCreationdateIs(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2019-11-04T19:03:22.861Z",
        "line": 19,
        "name": "Read date from MP4 file",
        "description": "",
        "id": "unittest-createdate;read-date-from-mp4-file",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 911029000,
              "status": "passed"
            },
            "line": 20,
            "name": "File \"SonyA6300.MP4\"",
            "match": {
              "arguments": [
                {
                  "val": "\"SonyA6300.MP4\"",
                  "offset": 5
                }
              ],
              "location": "stepDefinitions.file(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1406168900,
              "status": "passed"
            },
            "line": 21,
            "name": "the creationdate is \"2019-06-28 12:39:40\"",
            "match": {
              "arguments": [
                {
                  "val": "\"2019-06-28 12:39:40\"",
                  "offset": 20
                }
              ],
              "location": "stepDefinitions.theCreationdateIs(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2019-11-04T19:03:25.274Z",
        "line": 23,
        "name": "Read date from M2TS file",
        "description": "",
        "id": "unittest-createdate;read-date-from-m2ts-file",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 864943000,
              "status": "passed"
            },
            "line": 24,
            "name": "File \"SonyA77.m2ts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"SonyA77.m2ts\"",
                  "offset": 5
                }
              ],
              "location": "stepDefinitions.file(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 524116800,
              "status": "passed"
            },
            "line": 25,
            "name": "the creationdate is \"2016-08-07 19:00:56\"",
            "match": {
              "arguments": [
                {
                  "val": "\"2016-08-07 19:00:56\"",
                  "offset": 20
                }
              ],
              "location": "stepDefinitions.theCreationdateIs(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Unittest CreateDate",
    "description": "",
    "id": "unittest-createdate",
    "keyword": "Feature",
    "uri": "file:features/CreateDate.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2019-11-04T19:03:26.695Z",
        "line": 3,
        "name": "Read GPS from Sony RAW file",
        "description": "",
        "id": "read-gps-tags-and-get-address;read-gps-from-sony-raw-file",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 521563300,
              "status": "passed"
            },
            "line": 4,
            "name": "File \"SonyA77.m2ts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"SonyA77.m2ts\"",
                  "offset": 5
                }
              ],
              "location": "stepDefinitions.file(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3338758700,
              "status": "passed"
            },
            "line": 5,
            "name": "read GPS tags",
            "match": {
              "location": "stepDefinitions.readGPSTags()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 24080000,
              "status": "passed"
            },
            "line": 6,
            "name": "latitude should be \"51.454183\"",
            "match": {
              "arguments": [
                {
                  "val": "\"51.454183\"",
                  "offset": 19
                }
              ],
              "location": "stepDefinitions.latitudeShouldBe(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22439700,
              "status": "passed"
            },
            "line": 7,
            "name": "longitude should be \"3.653545\"",
            "match": {
              "arguments": [
                {
                  "val": "\"3.653545\"",
                  "offset": 20
                }
              ],
              "location": "stepDefinitions.longitudeShouldBe(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError\r\n\tat org.junit.Assert.fail(Assert.java:86)\r\n\tat org.junit.Assert.fail(Assert.java:95)\r\n\tat stepDefinitions.stepDefinitions.streetShouldBe(stepDefinitions.java:106)\r\n\tat ✽.street should be \"Rammekensweg\"(file:features/GPSTags.feature:8)\r\n",
              "duration": 25842900,
              "status": "failed"
            },
            "line": 8,
            "name": "street should be \"Rammekensweg\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Rammekensweg\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.streetShouldBe(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22695000,
              "status": "skipped"
            },
            "line": 9,
            "name": "location should be \"Ritthem\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ritthem\"",
                  "offset": 19
                }
              ],
              "location": "stepDefinitions.locationShouldBe(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21790200,
              "status": "skipped"
            },
            "line": 10,
            "name": "city should be \"Vlissingen\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Vlissingen\"",
                  "offset": 15
                }
              ],
              "location": "stepDefinitions.cityShouldBe(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2019-11-04T19:03:30.795Z",
        "line": 12,
        "name": "Read GPS from Sony RAW file and writes found address information",
        "description": "",
        "id": "read-gps-tags-and-get-address;read-gps-from-sony-raw-file-and-writes-found-address-information",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 748263300,
              "status": "passed"
            },
            "line": 13,
            "name": "File \"SonyA77.ARW\"",
            "match": {
              "arguments": [
                {
                  "val": "\"SonyA77.ARW\"",
                  "offset": 5
                }
              ],
              "location": "stepDefinitions.file(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1378396900,
              "status": "passed"
            },
            "line": 14,
            "name": "read GPS tags and write address information",
            "match": {
              "location": "stepDefinitions.readGPSTagsAndWriteAddressInformation()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1594788000,
              "status": "passed"
            },
            "line": 15,
            "name": "tag \"XMP:City\" should contain \"Schouwen-Duiveland\"",
            "match": {
              "arguments": [
                {
                  "val": "\"XMP:City\"",
                  "offset": 4
                },
                {
                  "val": "\"Schouwen-Duiveland\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.tagShouldContain(String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1375469400,
              "status": "passed"
            },
            "line": 16,
            "name": "tag \"XMP:CountryCode\" should contain \"NL\"",
            "match": {
              "arguments": [
                {
                  "val": "\"XMP:CountryCode\"",
                  "offset": 4
                },
                {
                  "val": "\"NL\"",
                  "offset": 37
                }
              ],
              "location": "stepDefinitions.tagShouldContain(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1361098300,
              "status": "passed"
            },
            "line": 17,
            "name": "tag \"IPTC:Country-PrimaryLocationCode\" should contain \"NLD\"",
            "match": {
              "arguments": [
                {
                  "val": "\"IPTC:Country-PrimaryLocationCode\"",
                  "offset": 4
                },
                {
                  "val": "\"NLD\"",
                  "offset": 54
                }
              ],
              "location": "stepDefinitions.tagShouldContain(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1365808000,
              "status": "passed"
            },
            "line": 18,
            "name": "tag \"XMP:Country\" should contain \"Nederland\"",
            "match": {
              "arguments": [
                {
                  "val": "\"XMP:Country\"",
                  "offset": 4
                },
                {
                  "val": "\"Nederland\"",
                  "offset": 33
                }
              ],
              "location": "stepDefinitions.tagShouldContain(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1369010300,
              "status": "passed"
            },
            "line": 19,
            "name": "tag \"IPTC:Country-PrimaryLocationName\" should contain \"Nederland\"",
            "match": {
              "arguments": [
                {
                  "val": "\"IPTC:Country-PrimaryLocationName\"",
                  "offset": 4
                },
                {
                  "val": "\"Nederland\"",
                  "offset": 54
                }
              ],
              "location": "stepDefinitions.tagShouldContain(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1379132500,
              "status": "passed"
            },
            "line": 20,
            "name": "tag \"XMP:State\" should contain \"Zeeland\"",
            "match": {
              "arguments": [
                {
                  "val": "\"XMP:State\"",
                  "offset": 4
                },
                {
                  "val": "\"Zeeland\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.tagShouldContain(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1326622100,
              "status": "passed"
            },
            "line": 21,
            "name": "tag \"IPTC:Province-State\" should contain \"Zeeland\"",
            "match": {
              "arguments": [
                {
                  "val": "\"IPTC:Province-State\"",
                  "offset": 4
                },
                {
                  "val": "\"Zeeland\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.tagShouldContain(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1317634400,
              "status": "passed"
            },
            "line": 22,
            "name": "tag \"IPTC:ObjectName\" should contain \"Bruinisse\"",
            "match": {
              "arguments": [
                {
                  "val": "\"IPTC:ObjectName\"",
                  "offset": 4
                },
                {
                  "val": "\"Bruinisse\"",
                  "offset": 37
                }
              ],
              "location": "stepDefinitions.tagShouldContain(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1310862100,
              "status": "passed"
            },
            "line": 23,
            "name": "tag \"IPTC:Sub-location\" should contain \"Bruinisse\"",
            "match": {
              "arguments": [
                {
                  "val": "\"IPTC:Sub-location\"",
                  "offset": 4
                },
                {
                  "val": "\"Bruinisse\"",
                  "offset": 39
                }
              ],
              "location": "stepDefinitions.tagShouldContain(String,String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Read GPS tags and get address",
    "description": "",
    "id": "read-gps-tags-and-get-address",
    "keyword": "Feature",
    "uri": "file:features/GPSTags.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2019-11-04T19:03:45.662Z",
        "line": 3,
        "name": "Read configuration file",
        "description": "",
        "id": "unittest-renamefiles;read-configuration-file",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "undefined"
            },
            "line": 4,
            "name": "I want to rename files",
            "match": {},
            "keyword": "Given "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 5,
            "name": "file \"start.yml\" exists",
            "match": {},
            "keyword": "When "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 6,
            "name": "\"start.yml\" should be of format YAML",
            "match": {},
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Unittest RenameFiles",
    "description": "",
    "id": "unittest-renamefiles",
    "keyword": "Feature",
    "uri": "file:features/RenameFiles.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2019-11-04T19:03:45.790Z",
        "line": 3,
        "name": "Write Author to Sony RAW file",
        "description": "",
        "id": "unittest-write-tags;write-author-to-sony-raw-file",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 250966600,
              "status": "passed"
            },
            "line": 4,
            "name": "file to write \"SonyA77.ARW\"",
            "match": {
              "arguments": [
                {
                  "val": "\"SonyA77.ARW\"",
                  "offset": 14
                }
              ],
              "location": "stepDefinitions.fileToWrite(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5068758900,
              "status": "passed"
            },
            "line": 5,
            "name": "write Author \"Peter Bergé\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Peter Bergé\"",
                  "offset": 13
                }
              ],
              "location": "stepDefinitions.writeAuthor(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1448258800,
              "status": "passed"
            },
            "line": 6,
            "name": "tag \"XMP:CaptionWriter\" should contain \"Peter Bergé\"",
            "match": {
              "arguments": [
                {
                  "val": "\"XMP:CaptionWriter\"",
                  "offset": 4
                },
                {
                  "val": "\"Peter Bergé\"",
                  "offset": 39
                }
              ],
              "location": "stepDefinitions.tagShouldContain(String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1309324500,
              "status": "passed"
            },
            "line": 7,
            "name": "tag \"EXIF:Artist\" should contain \"Peter Bergé\"",
            "match": {
              "arguments": [
                {
                  "val": "\"EXIF:Artist\"",
                  "offset": 4
                },
                {
                  "val": "\"Peter Bergé\"",
                  "offset": 33
                }
              ],
              "location": "stepDefinitions.tagShouldContain(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1331392600,
              "status": "passed"
            },
            "line": 8,
            "name": "tag \"EXIF:XPAuthor\" should contain \"Peter Bergé\"",
            "match": {
              "arguments": [
                {
                  "val": "\"EXIF:XPAuthor\"",
                  "offset": 4
                },
                {
                  "val": "\"Peter Bergé\"",
                  "offset": 35
                }
              ],
              "location": "stepDefinitions.tagShouldContain(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1321784600,
              "status": "passed"
            },
            "line": 9,
            "name": "tag \"XMP:Creator\" should contain \"Peter Bergé\"",
            "match": {
              "arguments": [
                {
                  "val": "\"XMP:Creator\"",
                  "offset": 4
                },
                {
                  "val": "\"Peter Bergé\"",
                  "offset": 33
                }
              ],
              "location": "stepDefinitions.tagShouldContain(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1441517100,
              "status": "passed"
            },
            "line": 10,
            "name": "tag \"IPTC:By-line\" should contain \"Peter Bergé\"",
            "match": {
              "arguments": [
                {
                  "val": "\"IPTC:By-line\"",
                  "offset": 4
                },
                {
                  "val": "\"Peter Bergé\"",
                  "offset": 34
                }
              ],
              "location": "stepDefinitions.tagShouldContain(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1361372800,
              "status": "passed"
            },
            "line": 11,
            "name": "tag \"IPTC:Writer-Editor\" should contain \"Peter Bergé\"",
            "match": {
              "arguments": [
                {
                  "val": "\"IPTC:Writer-Editor\"",
                  "offset": 4
                },
                {
                  "val": "\"Peter Bergé\"",
                  "offset": 40
                }
              ],
              "location": "stepDefinitions.tagShouldContain(String,String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2019-11-04T19:03:59.440Z",
        "line": 13,
        "name": "Write City to Sony RAW file",
        "description": "",
        "id": "unittest-write-tags;write-city-to-sony-raw-file",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 200317100,
              "status": "passed"
            },
            "line": 14,
            "name": "file to write \"SonyA77.ARW\"",
            "match": {
              "arguments": [
                {
                  "val": "\"SonyA77.ARW\"",
                  "offset": 14
                }
              ],
              "location": "stepDefinitions.fileToWrite(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4136690700,
              "status": "passed"
            },
            "line": 15,
            "name": "write City \"Воронеж\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Воронеж\"",
                  "offset": 11
                }
              ],
              "location": "stepDefinitions.writeCity(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1408375200,
              "status": "passed"
            },
            "line": 16,
            "name": "tag \"XMP:City\" should contain \"Воронеж\"",
            "match": {
              "arguments": [
                {
                  "val": "\"XMP:City\"",
                  "offset": 4
                },
                {
                  "val": "\"Воронеж\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.tagShouldContain(String,String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2019-11-04T19:04:05.225Z",
        "line": 18,
        "name": "Write Title to Sony MP4 file",
        "description": "",
        "id": "unittest-write-tags;write-title-to-sony-mp4-file",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 476723500,
              "status": "passed"
            },
            "line": 19,
            "name": "file to write \"SonyA6300.MP4\"",
            "match": {
              "arguments": [
                {
                  "val": "\"SonyA6300.MP4\"",
                  "offset": 14
                }
              ],
              "location": "stepDefinitions.fileToWrite(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 7414426000,
              "status": "passed"
            },
            "line": 20,
            "name": "write Title \"Воронеж\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Воронеж\"",
                  "offset": 12
                }
              ],
              "location": "stepDefinitions.writeTitle(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1424373600,
              "status": "passed"
            },
            "line": 21,
            "name": "tag \"XMP:Title\" should contain \"Воронеж\"",
            "match": {
              "arguments": [
                {
                  "val": "\"XMP:Title\"",
                  "offset": 4
                },
                {
                  "val": "\"Воронеж\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.tagShouldContain(String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1408588900,
              "status": "passed"
            },
            "line": 22,
            "name": "tag \"XMP:Description\" should contain \"Воронеж\"",
            "match": {
              "arguments": [
                {
                  "val": "\"XMP:Description\"",
                  "offset": 4
                },
                {
                  "val": "\"Воронеж\"",
                  "offset": 37
                }
              ],
              "location": "stepDefinitions.tagShouldContain(String,String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2019-11-04T19:04:15.997Z",
        "line": 24,
        "name": "Write Keys to DNG file",
        "description": "",
        "id": "unittest-write-tags;write-keys-to-dng-file",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 199242400,
              "status": "passed"
            },
            "line": 25,
            "name": "file to write \"DJIOsmoPlus.DNG\"",
            "match": {
              "arguments": [
                {
                  "val": "\"DJIOsmoPlus.DNG\"",
                  "offset": 14
                }
              ],
              "location": "stepDefinitions.fileToWrite(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3608349600,
              "status": "passed"
            },
            "line": 26,
            "name": "write Keys \"Sleutel 1,Sleutel 2,Дача\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Sleutel 1,Sleutel 2,Дача\"",
                  "offset": 11
                }
              ],
              "location": "stepDefinitions.writeKeys(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1165676500,
              "status": "passed"
            },
            "line": 27,
            "name": "tag \"EXIF:XPKeywords\" should contain \"Sleutel 1, Sleutel 2, Дача\"",
            "match": {
              "arguments": [
                {
                  "val": "\"EXIF:XPKeywords\"",
                  "offset": 4
                },
                {
                  "val": "\"Sleutel 1, Sleutel 2, Дача\"",
                  "offset": 37
                }
              ],
              "location": "stepDefinitions.tagShouldContain(String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1085511900,
              "status": "passed"
            },
            "line": 28,
            "name": "tag \"XMP:Subject\" should contain \"Sleutel 1, Sleutel 2, Дача\"",
            "match": {
              "arguments": [
                {
                  "val": "\"XMP:Subject\"",
                  "offset": 4
                },
                {
                  "val": "\"Sleutel 1, Sleutel 2, Дача\"",
                  "offset": 33
                }
              ],
              "location": "stepDefinitions.tagShouldContain(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1154531500,
              "status": "passed"
            },
            "line": 29,
            "name": "tag \"IPTC:Keywords\" should contain \"Sleutel 1, Sleutel 2, Дача\"",
            "match": {
              "arguments": [
                {
                  "val": "\"IPTC:Keywords\"",
                  "offset": 4
                },
                {
                  "val": "\"Sleutel 1, Sleutel 2, Дача\"",
                  "offset": 35
                }
              ],
              "location": "stepDefinitions.tagShouldContain(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1104616600,
              "status": "passed"
            },
            "line": 30,
            "name": "tag \"XMP:LastKeywordXMP\" should contain \"Sleutel 1, Sleutel 2, Дача\"",
            "match": {
              "arguments": [
                {
                  "val": "\"XMP:LastKeywordXMP\"",
                  "offset": 4
                },
                {
                  "val": "\"Sleutel 1, Sleutel 2, Дача\"",
                  "offset": 40
                }
              ],
              "location": "stepDefinitions.tagShouldContain(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1104347200,
              "status": "passed"
            },
            "line": 31,
            "name": "tag \"XMP:LastKeywordIPTC\" should contain \"Sleutel 1, Sleutel 2, Дача\"",
            "match": {
              "arguments": [
                {
                  "val": "\"XMP:LastKeywordIPTC\"",
                  "offset": 4
                },
                {
                  "val": "\"Sleutel 1, Sleutel 2, Дача\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.tagShouldContain(String,String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2019-11-04T19:04:25.536Z",
        "line": 33,
        "name": "Write Country to OnePlus2 MP4 file",
        "description": "",
        "id": "unittest-write-tags;write-country-to-oneplus2-mp4-file",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1430556100,
              "status": "passed"
            },
            "line": 34,
            "name": "file to write \"OnePlus2.mp4\"",
            "match": {
              "arguments": [
                {
                  "val": "\"OnePlus2.mp4\"",
                  "offset": 14
                }
              ],
              "location": "stepDefinitions.fileToWrite(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16617748400,
              "status": "passed"
            },
            "line": 35,
            "name": "write Country \"Israël\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Israël\"",
                  "offset": 14
                }
              ],
              "location": "stepDefinitions.writeCountry(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1215266300,
              "status": "passed"
            },
            "line": 36,
            "name": "tag \"XMP:Country\" should contain \"Israël\"",
            "match": {
              "arguments": [
                {
                  "val": "\"XMP:Country\"",
                  "offset": 4
                },
                {
                  "val": "\"Israël\"",
                  "offset": 33
                }
              ],
              "location": "stepDefinitions.tagShouldContain(String,String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Unittest write tags",
    "description": "",
    "id": "unittest-write-tags",
    "keyword": "Feature",
    "uri": "file:features/WriteTags.feature",
    "tags": []
  }
]